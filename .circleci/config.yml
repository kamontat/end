version: 2.1

orbs:
  hello: circleci/hello-build@0.0.14
  node: circleci/node@2.1.0
  sonarcloud: sonarsource/sonarcloud@1.0.1

parameters:
  node-version:
    type: string
    default: "12.16"

commands:
  info:
    description: Start workflow
    steps:
      - hello/circleci-env-highlights
      - hello/system-info
  gpg-setup:
    description: GPG setup
    steps:
      - run:
          name: "[GPG] Import private key"
          command: echo "$GPG_PRIVATE_KEY_BASE64" | base64 --decode | gpg --batch --allow-secret-key-import --import
      - run:
          name: "[GPG] Listing all secret keys"
          command: gpg --keyid-format LONG --list-secret-keys
  gpg-cleanup:
    description: GPG cleanup
    steps:
      - run:
          name: "[GPG] Deleting private key"
          command: gpg --batch --yes --delete-secret-key "$GPG_IDENTIFY_KEY"
      - run:
          name: "[GPG] Deleting public key"
          command: gpg --batch --yes --delete-key "$GPG_IDENTIFY_KEY"
      - run:
          name: "[GPG] Listing all secret keys"
          command: gpg --keyid-format LONG --list-secret-key
  git-setup:
    description: Git setup
    steps:
      - run:
          name: "[GIT] Add user email"
          command: git config --global user.email "ci@kamontat.net"
      - run:
          name: "[GIT] Add username"
          command: git config --global user.name "Kamontat Chantrachirathumrong [bot]"
      - run:
          name: "[GIT] Add user signing key"
          command: git config --global user.signingKey "$GPG_SIGNING_KEY"

jobs:
  main:
    docker:
      - image: cimg/node:<< pipeline.parameters.node-version >>
    environment:
      ENV: "ci"
      JEST_JUNIT_OUTPUT_DIR: ./reports/junit/
    steps:
      - checkout
      - info
      - node/install-packages:
          cache-version: "v1-lerna"
          cache-key: "yarn.lock"
          pkg-manager: yarn
          include-branch-in-cache-key: false
      - run:
          name: Install and links lerna project together
          command: yarn bootstrap
      - run:
          name: Compile and build application
          command: yarn build:ci
      - run:
          name: Test all unittest
          command: yarn test:ci
      - sonarcloud/scan:
          cache_version: 1
      - store_test_results:
          path: ./reports/junit/
      - store_artifacts:
          path: ./packages/internals/graph/graph.pdf
          destination: result/graph.pdf
      - store_artifacts:
          path: ./coverage
          destination: reports/coverage
      - store_artifacts:
          path: ./reports/junit/
          destination: reports/junit

  release:
    docker:
      - image: cimg/node:<< pipeline.parameters.node-version >>
    steps:
      - add_ssh_keys:
          name: Import github.com SSH key
          fingerprints:
            - "95:d8:61:2a:85:ad:42:2d:08:80:de:bb:1b:96:c9:13"
      - checkout
      - gpg-setup
      - git-setup
      - run:
          name: Install graphviz
          command: |
            sudo apt-get install -y graphviz
      - node/install-packages:
          cache-version: "v1-lerna"
          cache-key: "yarn.lock"
          pkg-manager: yarn
          include-branch-in-cache-key: false
      - run:
          name: Install and links lerna project together
          command: yarn bootstrap
      - run:
          name: Build dependencies graph
          command: yarn start:graph
      - run:
          name: Update version on package
          command: yarn version:ci || true
      - run:
          name: Release new package version
          command: yarn release:ci || true
      - gpg-cleanup

workflows:
  version: 2
  default:
    jobs:
      - main
      - release:
          filters:
            branches:
              only: master
          requires:
            - main
